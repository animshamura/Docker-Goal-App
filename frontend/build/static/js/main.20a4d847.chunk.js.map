{"version":3,"sources":["components/UI/Card.js","components/goals/GoalInput.js","components/goals/GoalItem.js","components/goals/CourseGoals.js","components/UI/ErrorAlert.js","App.js","index.js"],"names":["Card","props","className","children","GoalInput","useState","enteredGoalText","setEnteredGoalText","id","onSubmit","event","preventDefault","trim","length","onAddGoal","alert","htmlFor","type","value","onChange","target","GoalItem","onClick","onDelete","bind","text","CourseGoals","hasNoGoals","goals","map","goal","key","onDeleteGoal","ErrorAlert","errorText","App","loadedGoals","setLoadedGoals","isLoading","setIsLoading","error","setError","goalText","a","fetch","method","body","JSON","stringify","headers","response","json","resData","ok","Error","message","prevGoals","goalId","filter","useEffect","fetchData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20a4d847.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nfunction Card(props) {\n  return <div className='card'>{props.children}</div>;\n}\n\nexport default Card;\n","import React, { useState } from 'react';\n\nimport './GoalInput.css';\nimport Card from '../UI/Card';\n\nfunction GoalInput(props) {\n  const [enteredGoalText, setEnteredGoalText] = useState('');\n\n  function updateGoalTextHandler(event) {\n    setEnteredGoalText(event.target.value);\n  }\n\n  function goalSubmitHandler(event) {\n    event.preventDefault();\n\n    if (enteredGoalText.trim().length === 0) {\n      alert('Invalid text - please enter a longer one!');\n      return;\n    }\n\n    props.onAddGoal(enteredGoalText);\n\n    setEnteredGoalText('');\n  }\n\n  return (\n    <section id='goal-input'>\n      <Card>\n        <form onSubmit={goalSubmitHandler}>\n          <label htmlFor='text'>New Goal</label>\n          <input\n            type='text'\n            id='text'\n            value={enteredGoalText}\n            onChange={updateGoalTextHandler}\n          />\n          <button>Add Goal</button>\n        </form>\n      </Card>\n    </section>\n  );\n}\n\nexport default GoalInput;\n","import React from 'react';\n\nimport './GoalItem.css';\n\nfunction GoalItem(props) {\n  return <li className=\"goal-item\" onClick={props.onDelete.bind(null, props.id)}>{props.text}</li>;\n}\n\nexport default GoalItem;\n","import React from 'react';\n\nimport './CourseGoals.css';\nimport Card from '../UI/Card';\nimport GoalItem from './GoalItem';\n\nfunction CourseGoals(props) {\n  const hasNoGoals = !props.goals || props.goals.length === 0;\n\n  return (\n    <section id='course-goals'>\n      <Card>\n        <h2>Your Goals</h2>\n        {hasNoGoals && <h2>No goals found. Start adding some!</h2>}\n        <ul>\n          {props.goals.map((goal) => (\n            <GoalItem\n              key={goal.id}\n              id={goal.id}\n              text={goal.text}\n              onDelete={props.onDeleteGoal}\n            />\n          ))}\n        </ul>\n      </Card>\n    </section>\n  );\n}\n\nexport default CourseGoals;\n","import React from 'react';\n\nimport './ErrorAlert.css';\n\nfunction ErrorAlert(props) {\n  return (\n    <section className='error-alert'>\n      <h2>Something went wrong!</h2>\n      <p>{props.errorText}</p>\n    </section>\n  );\n}\n\nexport default ErrorAlert;\n","import React, { useState, useEffect } from 'react';\n\nimport GoalInput from './components/goals/GoalInput';\nimport CourseGoals from './components/goals/CourseGoals';\nimport ErrorAlert from './components/UI/ErrorAlert';\n\nfunction App() {\n  const [loadedGoals, setLoadedGoals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(function () {\n    async function fetchData() {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('/api/goals/');\n\n        const resData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(resData.message || 'Fetching the goals failed.');\n        }\n\n        setLoadedGoals(resData.goals);\n      } catch (err) {\n        setError(\n          err.message ||\n            'Fetching goals failed - the server responsed with an error.'\n        );\n      }\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  async function addGoalHandler(goalText) {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/goals/', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: goalText,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Adding the goal failed.');\n      }\n\n      setLoadedGoals((prevGoals) => {\n        const updatedGoals = [\n          {\n            id: resData.goal.id,\n            text: goalText,\n          },\n          ...prevGoals,\n        ];\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(\n        err.message ||\n          'Adding a goal failed - the server responsed with an error.'\n      );\n    }\n    setIsLoading(false);\n  }\n\n  async function deleteGoalHandler(goalId) {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/goals/' + goalId, {\n        method: 'DELETE',\n      });\n\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Deleting the goal failed.');\n      }\n\n      setLoadedGoals((prevGoals) => {\n        const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(\n        err.message ||\n          'Deleting the goal failed - the server responsed with an error.'\n      );\n    }\n    setIsLoading(false);\n  }\n\n  return (\n    <div>\n      {error && <ErrorAlert errorText={error} />}\n      <GoalInput onAddGoal={addGoalHandler} />\n      {!isLoading && (\n        <CourseGoals goals={loadedGoals} onDeleteGoal={deleteGoalHandler} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}